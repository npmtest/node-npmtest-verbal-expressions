{"/home/travis/build/npmtest/node-npmtest-verbal-expressions/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-verbal-expressions/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_verbal_expressions */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-verbal-expressions/lib.npmtest_verbal_expressions.js":{"path":"/home/travis/build/npmtest/node-npmtest-verbal-expressions/lib.npmtest_verbal_expressions.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":63}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":69}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_verbal_expressions */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_verbal_expressions = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_verbal_expressions = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-verbal-expressions/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-verbal-expressions/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":62}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":76},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-verbal-expressions && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_verbal_expressions */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_verbal_expressions","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_verbal_expressions.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_verbal_expressions.rollup.js'] =","            local.assetsDict['/assets.npmtest_verbal_expressions.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_verbal_expressions.__dirname + '/lib.npmtest_verbal_expressions.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-verbal-expressions/node_modules/verbal-expressions/VerbalExpressions.js":{"path":"/home/travis/build/npmtest/node-npmtest-verbal-expressions/node_modules/verbal-expressions/VerbalExpressions.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":1,"108":0,"109":1,"110":1,"111":0,"112":0,"113":0,"114":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[1,0],"18":[1,1],"19":[0,0],"20":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0},"fnMap":{"1":{"name":"verbalExpressionIIFE","line":14,"loc":{"start":{"line":14,"column":1},"end":{"line":14,"column":37}}},"2":{"name":"VerbalExpression","line":24,"loc":{"start":{"line":24,"column":4},"end":{"line":24,"column":32}}},"3":{"name":"injectClassMethods","line":38,"loc":{"start":{"line":38,"column":42},"end":{"line":38,"column":88}}},"4":{"name":"sanitize","line":68,"loc":{"start":{"line":68,"column":18},"end":{"line":68,"column":43}}},"5":{"name":"add","line":92,"loc":{"start":{"line":92,"column":13},"end":{"line":92,"column":33}}},"6":{"name":"startOfLine","line":104,"loc":{"start":{"line":104,"column":21},"end":{"line":104,"column":50}}},"7":{"name":"endOfLine","line":115,"loc":{"start":{"line":115,"column":19},"end":{"line":115,"column":46}}},"8":{"name":"then","line":126,"loc":{"start":{"line":126,"column":14},"end":{"line":126,"column":35}}},"9":{"name":"find","line":136,"loc":{"start":{"line":136,"column":14},"end":{"line":136,"column":35}}},"10":{"name":"maybe","line":145,"loc":{"start":{"line":145,"column":15},"end":{"line":145,"column":37}}},"11":{"name":"anything","line":155,"loc":{"start":{"line":155,"column":18},"end":{"line":155,"column":38}}},"12":{"name":"anythingBut","line":164,"loc":{"start":{"line":164,"column":21},"end":{"line":164,"column":49}}},"13":{"name":"something","line":173,"loc":{"start":{"line":173,"column":19},"end":{"line":173,"column":40}}},"14":{"name":"somethingBut","line":182,"loc":{"start":{"line":182,"column":22},"end":{"line":182,"column":51}}},"15":{"name":"replace","line":193,"loc":{"start":{"line":193,"column":17},"end":{"line":193,"column":49}}},"16":{"name":"lineBreak","line":205,"loc":{"start":{"line":205,"column":19},"end":{"line":205,"column":40}}},"17":{"name":"br","line":213,"loc":{"start":{"line":213,"column":12},"end":{"line":213,"column":26}}},"18":{"name":"tab","line":221,"loc":{"start":{"line":221,"column":13},"end":{"line":221,"column":28}}},"19":{"name":"word","line":229,"loc":{"start":{"line":229,"column":14},"end":{"line":229,"column":30}}},"20":{"name":"digit","line":237,"loc":{"start":{"line":237,"column":15},"end":{"line":237,"column":32}}},"21":{"name":"whitespace","line":246,"loc":{"start":{"line":246,"column":20},"end":{"line":246,"column":42}}},"22":{"name":"anyOf","line":255,"loc":{"start":{"line":255,"column":15},"end":{"line":255,"column":37}}},"23":{"name":"any","line":265,"loc":{"start":{"line":265,"column":13},"end":{"line":265,"column":33}}},"24":{"name":"range","line":273,"loc":{"start":{"line":273,"column":15},"end":{"line":273,"column":32}}},"25":{"name":"addModifier","line":303,"loc":{"start":{"line":303,"column":21},"end":{"line":303,"column":52}}},"26":{"name":"removeModifier","line":316,"loc":{"start":{"line":316,"column":24},"end":{"line":316,"column":58}}},"27":{"name":"withAnyCase","line":326,"loc":{"start":{"line":326,"column":21},"end":{"line":326,"column":50}}},"28":{"name":"stopAtFirst","line":335,"loc":{"start":{"line":335,"column":21},"end":{"line":335,"column":50}}},"29":{"name":"searchOneLine","line":344,"loc":{"start":{"line":344,"column":23},"end":{"line":344,"column":54}}},"30":{"name":"repeatPrevious","line":352,"loc":{"start":{"line":352,"column":24},"end":{"line":352,"column":50}}},"31":{"name":"oneOrMore","line":379,"loc":{"start":{"line":379,"column":19},"end":{"line":379,"column":40}}},"32":{"name":"multiple","line":390,"loc":{"start":{"line":390,"column":18},"end":{"line":390,"column":43}}},"33":{"name":"or","line":410,"loc":{"start":{"line":410,"column":12},"end":{"line":410,"column":31}}},"34":{"name":"beginCapture","line":426,"loc":{"start":{"line":426,"column":22},"end":{"line":426,"column":46}}},"35":{"name":"endCapture","line":436,"loc":{"start":{"line":436,"column":20},"end":{"line":436,"column":42}}},"36":{"name":"toRegExp","line":446,"loc":{"start":{"line":446,"column":18},"end":{"line":446,"column":38}}},"37":{"name":"createVerbalExpression","line":455,"loc":{"start":{"line":455,"column":4},"end":{"line":455,"column":38}}},"38":{"name":"define","line":466,"loc":{"start":{"line":466,"column":32},"end":{"line":466,"column":50}}}},"statementMap":{"1":{"start":{"line":14,"column":0},"end":{"line":473,"column":9}},"2":{"start":{"line":16,"column":4},"end":{"line":16,"column":30}},"3":{"start":{"line":24,"column":4},"end":{"line":32,"column":5}},"4":{"start":{"line":25,"column":8},"end":{"line":25,"column":44}},"5":{"start":{"line":28,"column":8},"end":{"line":28,"column":62}},"6":{"start":{"line":31,"column":8},"end":{"line":31,"column":32}},"7":{"start":{"line":38,"column":4},"end":{"line":50,"column":6}},"8":{"start":{"line":39,"column":8},"end":{"line":39,"column":19}},"9":{"start":{"line":41,"column":8},"end":{"line":47,"column":9}},"10":{"start":{"line":43,"column":12},"end":{"line":46,"column":13}},"11":{"start":{"line":45,"column":16},"end":{"line":45,"column":78}},"12":{"start":{"line":49,"column":8},"end":{"line":49,"column":32}},"13":{"start":{"line":55,"column":4},"end":{"line":450,"column":6}},"14":{"start":{"line":69,"column":12},"end":{"line":69,"column":31}},"15":{"start":{"line":71,"column":12},"end":{"line":73,"column":13}},"16":{"start":{"line":72,"column":16},"end":{"line":72,"column":36}},"17":{"start":{"line":75,"column":12},"end":{"line":77,"column":13}},"18":{"start":{"line":76,"column":16},"end":{"line":76,"column":29}},"19":{"start":{"line":80,"column":12},"end":{"line":80,"column":55}},"20":{"start":{"line":84,"column":12},"end":{"line":84,"column":57}},"21":{"start":{"line":93,"column":12},"end":{"line":93,"column":40}},"22":{"start":{"line":94,"column":12},"end":{"line":94,"column":90}},"23":{"start":{"line":96,"column":12},"end":{"line":96,"column":24}},"24":{"start":{"line":105,"column":12},"end":{"line":105,"column":40}},"25":{"start":{"line":106,"column":12},"end":{"line":106,"column":47}},"26":{"start":{"line":107,"column":12},"end":{"line":107,"column":30}},"27":{"start":{"line":116,"column":12},"end":{"line":116,"column":40}},"28":{"start":{"line":117,"column":12},"end":{"line":117,"column":47}},"29":{"start":{"line":118,"column":12},"end":{"line":118,"column":30}},"30":{"start":{"line":127,"column":12},"end":{"line":127,"column":41}},"31":{"start":{"line":128,"column":12},"end":{"line":128,"column":49}},"32":{"start":{"line":137,"column":12},"end":{"line":137,"column":36}},"33":{"start":{"line":146,"column":12},"end":{"line":146,"column":41}},"34":{"start":{"line":147,"column":12},"end":{"line":147,"column":50}},"35":{"start":{"line":156,"column":12},"end":{"line":156,"column":38}},"36":{"start":{"line":165,"column":12},"end":{"line":165,"column":41}},"37":{"start":{"line":166,"column":12},"end":{"line":166,"column":53}},"38":{"start":{"line":174,"column":12},"end":{"line":174,"column":38}},"39":{"start":{"line":183,"column":12},"end":{"line":183,"column":41}},"40":{"start":{"line":184,"column":12},"end":{"line":184,"column":53}},"41":{"start":{"line":194,"column":12},"end":{"line":194,"column":39}},"42":{"start":{"line":195,"column":12},"end":{"line":195,"column":47}},"43":{"start":{"line":206,"column":12},"end":{"line":206,"column":50}},"44":{"start":{"line":214,"column":12},"end":{"line":214,"column":36}},"45":{"start":{"line":222,"column":12},"end":{"line":222,"column":35}},"46":{"start":{"line":230,"column":12},"end":{"line":230,"column":36}},"47":{"start":{"line":238,"column":12},"end":{"line":238,"column":28}},"48":{"start":{"line":239,"column":12},"end":{"line":239,"column":24}},"49":{"start":{"line":247,"column":12},"end":{"line":247,"column":35}},"50":{"start":{"line":256,"column":12},"end":{"line":256,"column":41}},"51":{"start":{"line":257,"column":12},"end":{"line":257,"column":47}},"52":{"start":{"line":266,"column":12},"end":{"line":266,"column":37}},"53":{"start":{"line":274,"column":12},"end":{"line":274,"column":42}},"54":{"start":{"line":277,"column":12},"end":{"line":277,"column":47}},"55":{"start":{"line":278,"column":12},"end":{"line":278,"column":26}},"56":{"start":{"line":279,"column":12},"end":{"line":279,"column":22}},"57":{"start":{"line":280,"column":12},"end":{"line":280,"column":21}},"58":{"start":{"line":281,"column":12},"end":{"line":281,"column":19}},"59":{"start":{"line":283,"column":12},"end":{"line":283,"column":34}},"60":{"start":{"line":285,"column":12},"end":{"line":289,"column":13}},"61":{"start":{"line":286,"column":16},"end":{"line":286,"column":53}},"62":{"start":{"line":287,"column":16},"end":{"line":287,"column":51}},"63":{"start":{"line":288,"column":16},"end":{"line":288,"column":50}},"64":{"start":{"line":291,"column":12},"end":{"line":291,"column":34}},"65":{"start":{"line":293,"column":12},"end":{"line":293,"column":45}},"66":{"start":{"line":304,"column":12},"end":{"line":306,"column":13}},"67":{"start":{"line":305,"column":16},"end":{"line":305,"column":44}},"68":{"start":{"line":308,"column":12},"end":{"line":308,"column":30}},"69":{"start":{"line":317,"column":12},"end":{"line":317,"column":68}},"70":{"start":{"line":318,"column":12},"end":{"line":318,"column":30}},"71":{"start":{"line":327,"column":12},"end":{"line":327,"column":87}},"72":{"start":{"line":336,"column":12},"end":{"line":336,"column":87}},"73":{"start":{"line":345,"column":12},"end":{"line":345,"column":87}},"74":{"start":{"line":353,"column":12},"end":{"line":353,"column":22}},"75":{"start":{"line":354,"column":12},"end":{"line":354,"column":36}},"76":{"start":{"line":355,"column":12},"end":{"line":355,"column":42}},"77":{"start":{"line":356,"column":12},"end":{"line":356,"column":43}},"78":{"start":{"line":357,"column":12},"end":{"line":357,"column":22}},"79":{"start":{"line":358,"column":12},"end":{"line":358,"column":22}},"80":{"start":{"line":359,"column":12},"end":{"line":363,"column":13}},"81":{"start":{"line":360,"column":16},"end":{"line":362,"column":17}},"82":{"start":{"line":361,"column":20},"end":{"line":361,"column":47}},"83":{"start":{"line":365,"column":12},"end":{"line":369,"column":13}},"84":{"start":{"line":367,"column":16},"end":{"line":367,"column":34}},"85":{"start":{"line":368,"column":16},"end":{"line":368,"column":53}},"86":{"start":{"line":372,"column":12},"end":{"line":372,"column":35}},"87":{"start":{"line":380,"column":12},"end":{"line":380,"column":33}},"88":{"start":{"line":392,"column":12},"end":{"line":392,"column":57}},"89":{"start":{"line":393,"column":12},"end":{"line":395,"column":13}},"90":{"start":{"line":394,"column":16},"end":{"line":394,"column":47}},"91":{"start":{"line":397,"column":12},"end":{"line":400,"column":13}},"92":{"start":{"line":398,"column":16},"end":{"line":398,"column":46}},"93":{"start":{"line":399,"column":16},"end":{"line":399,"column":51}},"94":{"start":{"line":402,"column":12},"end":{"line":402,"column":24}},"95":{"start":{"line":411,"column":12},"end":{"line":411,"column":36}},"96":{"start":{"line":412,"column":12},"end":{"line":412,"column":50}},"97":{"start":{"line":414,"column":12},"end":{"line":414,"column":30}},"98":{"start":{"line":415,"column":12},"end":{"line":417,"column":13}},"99":{"start":{"line":416,"column":16},"end":{"line":416,"column":33}},"100":{"start":{"line":419,"column":12},"end":{"line":419,"column":24}},"101":{"start":{"line":428,"column":12},"end":{"line":428,"column":34}},"102":{"start":{"line":429,"column":12},"end":{"line":429,"column":33}},"103":{"start":{"line":438,"column":12},"end":{"line":438,"column":84}},"104":{"start":{"line":439,"column":12},"end":{"line":439,"column":33}},"105":{"start":{"line":447,"column":12},"end":{"line":447,"column":69}},"106":{"start":{"line":448,"column":12},"end":{"line":448,"column":50}},"107":{"start":{"line":455,"column":4},"end":{"line":457,"column":5}},"108":{"start":{"line":456,"column":8},"end":{"line":456,"column":38}},"109":{"start":{"line":461,"column":4},"end":{"line":472,"column":5}},"110":{"start":{"line":463,"column":8},"end":{"line":463,"column":48}},"111":{"start":{"line":464,"column":11},"end":{"line":472,"column":5}},"112":{"start":{"line":466,"column":8},"end":{"line":468,"column":11}},"113":{"start":{"line":467,"column":12},"end":{"line":467,"column":36}},"114":{"start":{"line":471,"column":8},"end":{"line":471,"column":51}}},"branchMap":{"1":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":12},"end":{"line":43,"column":12}},{"start":{"line":43,"column":12},"end":{"line":43,"column":12}}]},"2":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":12},"end":{"line":71,"column":12}},{"start":{"line":71,"column":12},"end":{"line":71,"column":12}}]},"3":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":12},"end":{"line":75,"column":12}},{"start":{"line":75,"column":12},"end":{"line":75,"column":12}}]},"4":{"line":93,"type":"binary-expr","locations":[{"start":{"line":93,"column":28},"end":{"line":93,"column":33}},{"start":{"line":93,"column":37},"end":{"line":93,"column":39}}]},"5":{"line":106,"type":"cond-expr","locations":[{"start":{"line":106,"column":38},"end":{"line":106,"column":41}},{"start":{"line":106,"column":44},"end":{"line":106,"column":46}}]},"6":{"line":117,"type":"cond-expr","locations":[{"start":{"line":117,"column":38},"end":{"line":117,"column":41}},{"start":{"line":117,"column":44},"end":{"line":117,"column":46}}]},"7":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":12},"end":{"line":304,"column":12}},{"start":{"line":304,"column":12},"end":{"line":304,"column":12}}]},"8":{"line":327,"type":"cond-expr","locations":[{"start":{"line":327,"column":38},"end":{"line":327,"column":59}},{"start":{"line":327,"column":62},"end":{"line":327,"column":86}}]},"9":{"line":336,"type":"cond-expr","locations":[{"start":{"line":336,"column":38},"end":{"line":336,"column":62}},{"start":{"line":336,"column":65},"end":{"line":336,"column":86}}]},"10":{"line":345,"type":"cond-expr","locations":[{"start":{"line":345,"column":38},"end":{"line":345,"column":62}},{"start":{"line":345,"column":65},"end":{"line":345,"column":86}}]},"11":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":16},"end":{"line":360,"column":16}},{"start":{"line":360,"column":16},"end":{"line":360,"column":16}}]},"12":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":12},"end":{"line":365,"column":12}},{"start":{"line":365,"column":12},"end":{"line":365,"column":12}}]},"13":{"line":392,"type":"binary-expr","locations":[{"start":{"line":392,"column":20},"end":{"line":392,"column":32}},{"start":{"line":392,"column":36},"end":{"line":392,"column":56}}]},"14":{"line":393,"type":"if","locations":[{"start":{"line":393,"column":12},"end":{"line":393,"column":12}},{"start":{"line":393,"column":12},"end":{"line":393,"column":12}}]},"15":{"line":397,"type":"if","locations":[{"start":{"line":397,"column":12},"end":{"line":397,"column":12}},{"start":{"line":397,"column":12},"end":{"line":397,"column":12}}]},"16":{"line":415,"type":"if","locations":[{"start":{"line":415,"column":12},"end":{"line":415,"column":12}},{"start":{"line":415,"column":12},"end":{"line":415,"column":12}}]},"17":{"line":461,"type":"if","locations":[{"start":{"line":461,"column":4},"end":{"line":461,"column":4}},{"start":{"line":461,"column":4},"end":{"line":461,"column":4}}]},"18":{"line":461,"type":"binary-expr","locations":[{"start":{"line":461,"column":8},"end":{"line":461,"column":37}},{"start":{"line":461,"column":41},"end":{"line":461,"column":55}}]},"19":{"line":464,"type":"if","locations":[{"start":{"line":464,"column":11},"end":{"line":464,"column":11}},{"start":{"line":464,"column":11},"end":{"line":464,"column":11}}]},"20":{"line":464,"type":"binary-expr","locations":[{"start":{"line":464,"column":15},"end":{"line":464,"column":43}},{"start":{"line":464,"column":47},"end":{"line":464,"column":57}}]}},"code":["/*!"," * VerbalExpressions JavaScript Library v0.3.0"," * https://github.com/VerbalExpressions/JSVerbalExpressions"," *"," *"," * Released under the MIT license"," * http://opensource.org/licenses/MIT"," */","","/**","* Define the VerbalExpression class.","* @class","*/","(function verbalExpressionIIFE(root) {","    // Constants","    var MODULE_NAME = 'VerEx';","","    /**","    * I am the constructor function.","    * @constructor","    * @alias VerEx","    * @return {RegExp} A new instance of RegExp with injected methods","    */","    function VerbalExpression() {","        var verbalExpression = new RegExp();","","        // Add all the class methods","        VerbalExpression.injectClassMethods(verbalExpression);","","        // Return the new object.","        return verbalExpression;","    }","","    /**","    * @param {RegExp} verbalExpression An instance of RegExp on which to add VerbalExpressions methods","    * @return {RegExp} A new instance of RegExp with injected methods","    */","    VerbalExpression.injectClassMethods = function injectClassMethods(verbalExpression) {","        var method;","        // Loop over all the prototype methods","        for (method in VerbalExpression.prototype) {","            // Make sure this is a local method.","            if (VerbalExpression.prototype.hasOwnProperty(method)) {","                // Add the method","                verbalExpression[method] = VerbalExpression.prototype[method];","            }","        }","","        return verbalExpression;","    };","","    /**","    * Define the class methods.","    */","    VerbalExpression.prototype = {","        // Variables to hold the whole","        // expression construction in order","        _prefixes: '',","        _source: '',","        _suffixes: '',","        _modifiers: 'gm', // default to global multiline matching","","        /**","        * Sanitation function for adding anything safely to the expression","        * @param {String} value string to sanitize","        * @return {String} sanitized value","        */","        sanitize: function sanitize(value) {","            var reRegExpEscape;","","            if (value.source) {","                return value.source;","            }","","            if (typeof value === 'number') {","                return value;","            }","","            // Regular expression meta characters, URL: https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/regexp","            reRegExpEscape = /([\\].|*?+(){}^$\\\\:=[])/g;","","            // Escape RegExp special characters only","            // $& => Last match, URL: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/lastMatch","            return value.replace(reRegExpEscape, '\\\\$&');","        },","","        /**","        * Function to add stuff to the expression. Also compiles the new expression so it's ready to be used.","        * @param {string} value literal expression, not sanitized","        * @return {VerbalExpression} Freshly recompiled instance of VerbalExpression","        */","        add: function add(value) {","            this._source += value || '';","            this.compile(this._prefixes + this._source + this._suffixes, this._modifiers);","","            return this;","        },","","        /**","        * Control start-of-line matching","        * @param {Boolean} enable Control start-of-line matching","        * @return {VerbalExpression} Same instance of VerbalExpression to allow method chaining","        */","        startOfLine: function startOfLine(enable) {","            enable = (enable !== false);","            this._prefixes = enable ? '^' : '';","            return this.add();","        },","","        /**","        * Control end-of-line matching","        * @param {Boolean} enable Control end-of-line matching","        * @return {VerbalExpression} Same instance of VerbalExpression to allow method chaining","        */","        endOfLine: function endOfLine(enable) {","            enable = (enable !== false);","            this._suffixes = enable ? '$' : '';","            return this.add();","        },","","        /**","        * We try to keep the syntax as user-friendly as possible. So we can use the \"normal\" behaviour to split the \"sentences\" naturally.","        * @param {String} value value to find","        * @return {VerbalExpression} Same instance of VerbalExpression to allow method chaining","        */","        then: function then(value) {","            value = this.sanitize(value);","            return this.add('(?:' + value + ')');","        },","","        /**","        * And because we can't start with \"then\" function, we create an alias to be used as the first function of the chain.","        * @param {String} value value to find","        * @return {VerbalExpression} Same instance of VerbalExpression to allow method chaining","        */","        find: function find(value) {","            return this.then(value);","        },","","        /*","        * Maybe is used to add values with ?","        * @param {String} value value to find","        * @return {VerbalExpression} Same instance of VerbalExpression to allow method chaining","        */","        maybe: function maybe(value) {","            value = this.sanitize(value);","            return this.add('(?:' + value + ')?');","        },","","        /**","        * Any character any number of times","        * @param {String} value value to find","        * @return {VerbalExpression} Same instance of VerbalExpression to allow method chaining","        */","        anything: function anything() {","            return this.add('(?:.*)');","        },","","        /**","        * Anything but these characters","        * @param {String} value value to find","        * @return {VerbalExpression} Same instance of VerbalExpression to allow method chaining","        */","        anythingBut: function anythingBut(value) {","            value = this.sanitize(value);","            return this.add('(?:[^' + value + ']*)');","        },","","        /**","        * Any character at least one time","        * @return {VerbalExpression} Same instance of VerbalExpression to allow method chaining","        */","        something: function something() {","            return this.add('(?:.+)');","        },","","        /**","        * Any character at least one time except for these characters","        * @param {String} value value to find","        * @return {VerbalExpression} Same instance of VerbalExpression to allow method chaining","        */","        somethingBut: function somethingBut(value) {","            value = this.sanitize(value);","            return this.add('(?:[^' + value + ']+)');","        },","","        /**","        * Shorthand function for the String.replace function to give more logical flow if, for example, we're doing multiple replacements on one regexp.","        * @param {String} source string to search for","        * @param {String} value value to replace with","        * @return {VerbalExpression} Same instance of VerbalExpression to allow method chaining","        */","        replace: function replace(source, value) {","            source = source.toString();","            return source.replace(this, value);","        },","","        /// Add regular expression special ///","        /// characters                     ///","","        /**","        * Line break","        * @return {VerbalExpression} Same instance of VerbalExpression to allow method chaining","        */","        lineBreak: function lineBreak() {","            return this.add('(?:\\\\r\\\\n|\\\\r|\\\\n)'); // Unix + Windows CRLF","        },","","        /**","        * And a shorthand for html-minded","        * @return {VerbalExpression} Same instance of VerbalExpression to allow method chaining","        */","        br: function br() {","            return this.lineBreak();","        },","","        /**","        * Tab (duh?)","        * @return {VerbalExpression} Same instance of VerbalExpression to allow method chaining","        */","        tab: function tab() {","            return this.add('\\\\t');","        },","","        /**","        * Any alphanumeric","        * @return {VerbalExpression} Same instance of VerbalExpression to allow method chaining","        */","        word: function word() {","            return this.add('\\\\w+');","        },","","        /**","        * Any digit","        * @return {VerbalExpression} Same instance of VerbalExpression to allow method chaining","        */","        digit: function digit() {","            this.add('\\\\d');","            return this;","        },","","        /**","        * Any whitespace","        * @return {VerbalExpression} Same instance of VerbalExpression to allow method chaining","        */","        whitespace: function whitespace() {","            return this.add('\\\\s');","        },","","        /**","        * Any given character","        * @param {String} value value to find","        * @return {VerbalExpression} Same instance of VerbalExpression to allow method chaining","        */","        anyOf: function anyOf(value) {","            value = this.sanitize(value);","            return this.add('[' + value + ']');","        },","","        /**","        * Shorthand","        * @param {String} value value to find","        * @return {VerbalExpression} Same instance of VerbalExpression to allow method chaining","        */","        any: function any(value) {","            return this.anyOf(value);","        },","","        /**","        * Usage: .range( from, to [, from, to ... ] )","        * @return {VerbalExpression} Same instance of VerbalExpression to allow method chaining","        */","        range: function range() {","            var length = arguments.length;","","            // Create a string buffer instead of concatenating on iteration","            var buffer = new Array(length / 2);","            var index = 0;","            var i = 0;","            var from;","            var to;","","            buffer[index++] = '[';","","            while (i < length) {","                from = this.sanitize(arguments[i++]);","                to = this.sanitize(arguments[i++]);","                buffer[index++] = from + '-' + to;","            }","","            buffer[index++] = ']';","","            return this.add(buffer.join(''));","        },","","        /// Modifiers      ///","","        /**","        * Modifier abstraction","        * @param {String} modifier modifier to add","        * @return {VerbalExpression} Same instance of VerbalExpression to allow method chaining","        */","        addModifier: function addModifier(modifier) {","            if (this._modifiers.indexOf(modifier) === -1) {","                this._modifiers += modifier;","            }","","            return this.add();","        },","","        /**","        * Remove modifier","        * @param {String} modifier modifier to remove","        * @return {VerbalExpression} Same instance of VerbalExpression to allow method chaining","        */","        removeModifier: function removeModifier(modifier) {","            this._modifiers = this._modifiers.replace(modifier, '');","            return this.add();","        },","","        /**","        * Case-insensitivity modifier","        * @param {Boolean} enable Control case-insensitive matching","        * @return {VerbalExpression} Same instance of VerbalExpression to allow method chaining","        */","        withAnyCase: function withAnyCase(enable) {","            return enable !== false ? this.addModifier('i') : this.removeModifier('i');","        },","","        /**","        * Default behaviour is with \"g\" modifier, so we can turn this another way around than other modifiers","        * @param {Boolean} enable Control global matching","        * @return {VerbalExpression} Same instance of VerbalExpression to allow method chaining","        */","        stopAtFirst: function stopAtFirst(enable) {","            return enable !== false ? this.removeModifier('g') : this.addModifier('g');","        },","","        /**","        * Multiline, also reversed","        * @param {Boolean} enable Control multi-line matching","        * @return {VerbalExpression} Same instance of VerbalExpression to allow method chaining","        */","        searchOneLine: function searchOneLine(enable) {","            return enable !== false ? this.removeModifier('m') : this.addModifier('m');","        },","","        /**","        * Repeats the previous item exactly n times or between n and m times.","        * @return {VerbalExpression} Same instance of VerbalExpression to allow method chaining","        */","        repeatPrevious: function repeatPrevious() {","            var value;","            var reIsInteger = /\\d+/;","            var length = arguments.length;","            var values = new Array(length);","            var i = 0;","            var j = 0;","            for (i = 0; i < length; i++) {","                if (reIsInteger.test(arguments[i])) {","                    values[j++] = arguments[i];","                }","            }","","            if (j > 0) {","                // Set the new length of the array, thus reducing to the elements that have content","                values.length = j;","                value = '{' + values.join(',') + '}';","            }","","","            return this.add(value);","        },","","        /**","        * Repeats the previous at least once","        * @return {VerbalExpression} Same instance of VerbalExpression to allow method chaining","        */","        oneOrMore: function oneOrMore() {","            return this.add('+');","        },","","        /// Loops  ///","","        /**","        * Matches the value zero or more times","        * @param {String} value value to find","        * @return {VerbalExpression} Same instance of VerbalExpression to allow method chaining","        */","        multiple: function multiple(value) {","            // Use expression or string","            value = value.source || this.sanitize(value);","            if (arguments.length === 1) {","                this.add('(?:' + value + ')*');","            }","","            if (arguments.length > 1) {","                this.add('(?:' + value + ')');","                this.add('{' + arguments[1] + '}');","            }","","            return this;","        },","","        /**","        * Adds alternative expressions","        * @param {String} value value to find","        * @return {VerbalExpression} Same instance of VerbalExpression to allow method chaining","        */","        or: function or(value) {","            this._prefixes += '(?:';","            this._suffixes = ')' + this._suffixes;","","            this.add(')|(?:');","            if (value) {","                this.then(value);","            }","","            return this;","        },","","        /**","        * Starts a capturing group","        * @return {VerbalExpression} Same instance of VerbalExpression to allow method chaining","        */","        beginCapture: function beginCapture() {","            // Add the end of the capture group to the suffixes for now so compilation continues to work","            this._suffixes += ')';","            return this.add('(');","        },","","        /**","        * Ends a capturing group","        * @return {VerbalExpression} Same instance of VerbalExpression to allow method chaining","        */","        endCapture: function endCapture() {","            // Remove the last parentheses from the _suffixes and add to the regex itself","            this._suffixes = this._suffixes.substring(0, this._suffixes.length - 1);","            return this.add(')');","        },","","        /**","        * Convert to RegExp object","        * @return {RegExp} Converted RegExp instance","        */","        toRegExp: function toRegExp() {","            var array = this.toString().match(/\\/(.*)\\/([gimuy]+)?/);","            return new RegExp(array[1], array[2]);","        }","    };","","    /**","    * @return {VerbalExpression} Returns a new instance of VerbalExpressions","    */","    function createVerbalExpression() {","        return new VerbalExpression();","    }","","    // UMD (Universal Module Definition), URL: https://github.com/umdjs/umd","    // Supports AMD, CommonJS and the browser","    if (typeof module !== 'undefined' && module.exports) {","        // Node.js Module","        module.exports = createVerbalExpression;","    } else if (typeof define === 'function' && define.amd) {","        // AMD Module","        define(MODULE_NAME, [], function define() {","            return VerbalExpression;","        });","    } else {","        // Browser","        root[MODULE_NAME] = createVerbalExpression;","    }","}(this));",""],"l":{"14":1,"16":1,"24":1,"25":0,"28":0,"31":0,"38":1,"39":0,"41":0,"43":0,"45":0,"49":0,"55":1,"69":0,"71":0,"72":0,"75":0,"76":0,"80":0,"84":0,"93":0,"94":0,"96":0,"105":0,"106":0,"107":0,"116":0,"117":0,"118":0,"127":0,"128":0,"137":0,"146":0,"147":0,"156":0,"165":0,"166":0,"174":0,"183":0,"184":0,"194":0,"195":0,"206":0,"214":0,"222":0,"230":0,"238":0,"239":0,"247":0,"256":0,"257":0,"266":0,"274":0,"277":0,"278":0,"279":0,"280":0,"281":0,"283":0,"285":0,"286":0,"287":0,"288":0,"291":0,"293":0,"304":0,"305":0,"308":0,"317":0,"318":0,"327":0,"336":0,"345":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"365":0,"367":0,"368":0,"372":0,"380":0,"392":0,"393":0,"394":0,"397":0,"398":0,"399":0,"402":0,"411":0,"412":0,"414":0,"415":0,"416":0,"419":0,"428":0,"429":0,"438":0,"439":0,"447":0,"448":0,"455":1,"456":0,"461":1,"463":1,"464":0,"466":0,"467":0,"471":0}},"/home/travis/build/npmtest/node-npmtest-verbal-expressions/node_modules/verbal-expressions/Gruntfile.js":{"path":"/home/travis/build/npmtest/node-npmtest-verbal-expressions/node_modules/verbal-expressions/Gruntfile.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"gruntConfig","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":45}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":88,"column":2}},"2":{"start":{"line":2,"column":4},"end":{"line":75,"column":7}},"3":{"start":{"line":77,"column":4},"end":{"line":77,"column":45}},"4":{"start":{"line":78,"column":4},"end":{"line":78,"column":46}},"5":{"start":{"line":79,"column":4},"end":{"line":79,"column":47}},"6":{"start":{"line":80,"column":4},"end":{"line":80,"column":39}},"7":{"start":{"line":81,"column":4},"end":{"line":81,"column":38}},"8":{"start":{"line":82,"column":4},"end":{"line":82,"column":51}},"9":{"start":{"line":84,"column":4},"end":{"line":84,"column":52}},"10":{"start":{"line":85,"column":4},"end":{"line":85,"column":45}},"11":{"start":{"line":86,"column":4},"end":{"line":86,"column":96}},"12":{"start":{"line":87,"column":4},"end":{"line":87,"column":54}}},"branchMap":{},"code":["module.exports = function gruntConfig(grunt) {","    grunt.initConfig({","        pkg: grunt.file.readJSON('package.json'),","","        eslint: {","            options: {","                configFile: '.eslintrc',","            },","            target: ['VerbalExpressions.js', 'test/tests.js'],","        },","","        qunit: {","            files: ['test/index.html'],","        },","","        copy: {","            build: {","                src: '<%= pkg.main %>',","                dest: 'dist/verbalexpressions.js',","            },","        },","","        uglify: {","            options: {","                banner: '/*!\\n' +","                    '* <%= pkg.name %> JavaScript Library v<%= pkg.version %>\\n' +","                    '* <%= pkg.homepage %>\\n' +","                    '*\\n' +","                    '*\\n' +","                    '* Released under the <%= pkg.license %> license\\n' +","                    '*\\n' +","                    '* Date: <%= grunt.template.today(\"yyyy-mm-dd\") %>\\n' +","                    '*\\n' +","                    '*/\\n',","                sourceMap: true,","            },","            dist: {","                files: {","                    'dist/verbalexpressions.min.js': ['<%= pkg.main %>'],","                },","            },","        },","","        sourcemap_localize: {","            options: {","                localize_to: '..',","            },","            build: {","                files: {","                    src: ['dist/*.min.js.map'],","                },","            },","        },","","        jsdoc: {","            options: {","                pedantic: true,","                verbose: true,","                readme: 'README.md',","                package: 'package.json',","            },","            src: {","                options: {","                    destination: 'docs',","                },","                src: ['VerbalExpressions.js'],","            },","            dist: {","                options: {","                    destination: 'dist/docs',","                },","                src: ['dist/verbalexpressions.js'],","            },","        },","    });","","    grunt.loadNpmTasks('grunt-contrib-copy');","    grunt.loadNpmTasks('grunt-contrib-qunit');","    grunt.loadNpmTasks('grunt-contrib-uglify');","    grunt.loadNpmTasks('grunt-eslint');","    grunt.loadNpmTasks('grunt-jsdoc');","    grunt.loadNpmTasks('grunt-sourcemap-localize');","","    grunt.registerTask('test', ['eslint', 'qunit']);","    grunt.registerTask('default', ['qunit']);","    grunt.registerTask('build', ['test', 'copy', 'uglify', 'sourcemap_localize', 'jsdoc:dist']);","    grunt.registerTask('docs', ['test', 'jsdoc:src']);","};",""],"l":{"1":1,"2":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"84":0,"85":0,"86":0,"87":0}}}